--
--  This model is part of the Speed Regulation model
--  that is a case-study that uses AADL for making
--  analysis of different architecture variations.
--
--  A full description of this case study can be found
--  on https://wiki.sei.cmu.edu/aadl/index.php/SpeedRegulation
--
--  Copyright Carnegie Mellon Software Engineering Institute, 2014.
--

package speed_regulation::integration

public

with speed_regulation::devices;
with speed_regulation::software;
with speed_regulation::platform;

system integration 
end integration;

system implementation integration.generic
subcomponents
-- input devices
	driver_camera : device speed_regulation::devices::driver_camera;
	pedestrian_camera : device speed_regulation::devices::pedestrian_camera;
--	obstacle_radar : device speed_regulation::devices::radar;
	wheel_sensor : device speed_regulation::devices::speed_wheel_sensor;
	laser_sensor : device speed_regulation::devices::speed_laser_sensor;
	gps1 : device speed_regulation::devices::gps.impl1;
--	gps2 : device speed_regulation::devices::gps.impl2;
    wsn_sensor : device speed_regulation::devices::wsn_sensor; 
	
-- software
    image_acquisition : process speed_regulation::software::image_acquisition.i;
    
    speed_estimate    : process speed_regulation::software::speed_estimate.i;
        
    fatigue_detection : process speed_regulation::software::fatigue_detection.i;
    
    pedestrian_detection : process speed_regulation::software::pedestrian_detection.i;
        
    emergency_detection : process speed_regulation::software::emergency_detection.i;
    
    warning_activation : process speed_regulation::software::warning_activation.i;
    
    logger : process speed_regulation::software::logger.i;
	
-- output devices
	warning_alert : device speed_regulation::devices::warning_device;
	brake         : device speed_regulation::devices::brake;
connections
-- obstacle camera to image acquisition
   c000 : port driver_camera.picture -> image_acquisition.picture;

-- speed wheel sensor to speed estimate
   c010 : port wheel_sensor.speed -> speed_estimate.wheel_sensor;

-- laser sensor to speed estimate
   c020 : port laser_sensor.speed -> speed_estimate.laser_sensor;

-- GPS to logger
   C030 : port gps1.position -> logger.position1;
	
-- Image acquisition to fatigue detection
   c040 : port image_acquisition.fatigue_detected_image -> fatigue_detection.camera; 

-- Image acquisition to pedestrian detection  
   c050 : port image_acquisition.pedestrian_detected_image -> pedestrian_detection.camera;

-- Fatigue detection to logger
   c060 : port fatigue_detection.blink_rate_per_minute -> logger.blink_rate_per_minute;
   
-- Pedestrian detection to logger
   c070 : port pedestrian_detection.total_proximate_pedestrians -> logger.total_proximate_pedestrians;

-- Fatigue detection to warning
   c080 : port fatigue_detection.fatigue_detected -> warning_activation.emergency_detected;
   
-- Pedestrian detection to emergency
   c090 : port pedestrian_detection.pedestrian_detected -> emergency_detection.proximate_pedestrian; 
   
-- Pedestrian detection to emergency
   c100 : port emergency_detection.emergency_detected -> brake.cmd;  
   
-- emergency detection to warning activation
   c110 : port emergency_detection.emergency_detected -> warning_activation.emergency_detected;
   
-- warning activation to warning device 
   c120 : port warning_activation.activate_warning -> warning_alert.warning;

-- Wheel sensor to speed estimate module
   c130 : port wheel_sensor.speed -> speed_estimate.wheel_sensor;

-- Laser sensor to speed estimate module
   c140 : port laser_sensor.speed -> speed_estimate.laser_sensor;
   
-- Speed estimate to emergency detection for PD checks
   c150 : port speed_estimate.vehicle_moving -> emergency_detection.vehicle_moving;
  
-- Speed estimate to logger
   c160 : port speed_estimate.speed -> logger.speed;
   
-- FD info to logger
   c170 : port fatigue_detection.blink_rate_per_minute -> logger.blink_rate_per_minute;
   
-- PD info to logger
   c180 : port pedestrian_detection.total_proximate_pedestrians -> logger.total_proximate_pedestrians; 

-- GPS info to logger
   c190 : port gps1.position -> logger.position1;    
   
	
flows
    --  From the driver camera to the warning device
	f0 : end to end flow 	driver_camera.f0 -> c000 ->
							image_acquisition.f0 -> c040 ->
							fatigue_detection.f0 -> c080 ->
							warning_activation.f0 -> c120 ->
							warning_alert.f0 {Latency => 700ms .. 900 ms;};	
							
    --  From the pedestrian camera to the warning device
    f1 : end to end flow  pedestrian_camera.f0 -> c000 ->
                            image_acquisition.f1 -> c050 ->
                            pedestrian_detection.f0 -> c090 ->
                            emergency_detection.f1 -> c110 ->
                            warning_activation.f0 -> c120 ->
                            warning_alert.f0 {Latency => 700ms .. 900 ms;};
                             
    --  From the pedestrian camera to the brake
	f2 : end to end flow 	pedestrian_camera.f0 -> c000 ->
							image_acquisition.f1 -> c050 ->
							pedestrian_detection.f0 -> c090 ->
							emergency_detection.f1 -> c100 ->
							brake.f0;	
	-- From the wheel speed sensor to brake if the vehicle is moving
	f3 : end to end flow wheel_sensor.f0 -> c130 -> 
	                     speed_estimate.f0 -> c150 ->
                         emergency_detection.f2 -> c100 ->
                         brake.f0;
    
    -- From the laser speed sensor to brake if the vehicle is moving                     
    f4 : end to end flow laser_sensor.f0 -> c130 -> 
                         speed_estimate.f0 -> c150 ->
                         emergency_detection.f2 -> c100 ->
                         brake.f0;

    -- From the wheel speed sensor to logger                    
    f5 : end to end flow wheel_sensor.f0 -> c130 -> 
                         speed_estimate.f0 -> c160 ->
                         logger.f4;
    
    -- From the laser speed sensor to logger                       
    f6 : end to end flow laser_sensor.f0 -> c130 -> 
                         speed_estimate.f0 -> c160 ->
                         logger.f4;
    
    -- Fatigue detection to logger                    
    f7 : end to end flow   driver_camera.f0 -> c000 ->
                            image_acquisition.f0 -> c040 ->
                            fatigue_detection.f0 -> c170 ->
                            logger.f2;

    -- Pedestrian detection to logger                    
    f8 : end to end flow   pedestrian_camera.f0 -> c000 ->
                            image_acquisition.f1 -> c050 ->
                            pedestrian_detection.f0 -> c180 ->
                            logger.f3;
                            
    -- From the GPS sensor to logger                       
    f9 : end to end flow gps1.f0 -> c190 ->
                         logger.f0;
   


	                      						 
--properties
--	Timing => immediate applies to 	c000, c010, c020, c030, c040, c050, c060, c070, c080, c090,
--									c100, c110, c120, c130, c140, c150, c160, c170, c180, c190,
--									c200, c210;
annex EMV2 {**
	use types speed_regulation::error_library;
	use behavior  	speed_regulation::error_library::simple;

	composite error behavior
	states
		[brake.Failed]-> Failed;
	end composite;
**};						 	
end integration.generic;


system implementation integration.implementation1 extends integration.generic
subcomponents
	ecu1 : processor speed_regulation::platform::ecu_can_one_connector;
	ecu2 : processor speed_regulation::platform::ecu_can_one_connector;
	can  : bus speed_regulation::platform::can;
connections
	b0 : bus access ecu1.socket <-> can;
	b1 : bus access ecu2.socket <-> can;
properties
	Actual_Connection_Binding => (reference (can)) applies to c080, c120, c130, c140, c150, c180, c190;
	Actual_Processor_Binding => (reference (ecu1)) applies to image_acquisition, speed_estimate, position_voter, obstacle_detection;
	Actual_Processor_Binding => (reference (ecu2)) applies to obstacle_distance_evaluation, speed_threshold_calculation, speed_controller, emergency_detection, warning_activation;
end integration.implementation1;


system implementation integration.implementation2 extends integration.generic
subcomponents
	ecu1 : processor speed_regulation::platform::ecu_rs232_one_connector;
	ecu2 : processor speed_regulation::platform::ecu_rs232_one_connector;
	ecu3 : processor speed_regulation::platform::ecu_rs232_two_connectors;
	bus1  : bus speed_regulation::platform::rs232;
	bus2  : bus speed_regulation::platform::rs232;
connections
	b0 : bus access ecu1.socket <-> bus1;
	b1 : bus access ecu2.socket <-> bus2;
	b2 : bus access ecu3.socket1 <-> bus1; 
	b3 : bus access ecu3.socket2 <-> bus2; 
properties
	Actual_Connection_Binding => (reference (bus1)) applies to c080, c120, c130, c140, c150;
	Actual_Connection_Binding => (reference (bus2)) applies to c180, c190;
	Actual_Processor_Binding => (reference (ecu1)) applies to image_acquisition, speed_estimate, obstacle_detection;
	Actual_Processor_Binding => (reference (ecu2)) applies to position_voter;
	Actual_Processor_Binding => (reference (ecu3)) applies to obstacle_distance_evaluation, speed_threshold_calculation, speed_controller, emergency_detection, warning_activation;
end integration.implementation2;



end speed_regulation::integration;